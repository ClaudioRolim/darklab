"use strict";(self.webpackChunkdarklab=self.webpackChunkdarklab||[]).push([[8407],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>k});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),u=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=u(a),g=n,k=c["".concat(s,".").concat(g)]||c[g]||p[g]||l;return a?r.createElement(k,i(i({ref:t},d),{},{components:a})):r.createElement(k,i({ref:t},d))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:n,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}g.displayName="MDXCreateElement"},3363:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var r=a(7462),n=(a(7294),a(3905));const l={sidebar_position:4,sidebar_label:"WIREGUARD"},i="WIREGUARD",o={unversionedId:"tutorials/wireguard",id:"tutorials/wireguard",title:"WIREGUARD",description:"SERVER Configuration",source:"@site/docs/tutorials/wireguard.md",sourceDirName:"tutorials",slug:"/tutorials/wireguard",permalink:"/darklab/docs/tutorials/wireguard",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials/wireguard.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"WIREGUARD"},sidebar:"tutorialSidebar",previous:{title:"GIT",permalink:"/darklab/docs/tutorials/git"},next:{title:"HEADSCALE",permalink:"/darklab/docs/tutorials/headscale"}},s={},u=[{value:"<strong>SERVER Configuration</strong>",id:"server-configuration",level:2},{value:"1. Run as <em>root</em>",id:"1-run-as-root",level:3},{value:"2. Enable Port Forwarding",id:"2-enable-port-forwarding",level:3},{value:"<strong>\u21b3</strong> Uncomment the following line:",id:"-uncomment-the-following-line",level:4},{value:"<strong>\u21b3</strong> Check if the port is active:",id:"-check-if-the-port-is-active",level:4},{value:"3. Install Wireguard",id:"3-install-wireguard",level:3},{value:"4. Generate Keys",id:"4-generate-keys",level:3},{value:"5. Create Wireguard Config",id:"5-create-wireguard-config",level:3},{value:"<strong>\u21b3</strong> Create file config:",id:"-create-file-config",level:4},{value:"<strong>\u21b3</strong> Add the following content:",id:"-add-the-following-content",level:4},{value:"<strong>\u21b3</strong> Optionally can add more clients:",id:"-optionally-can-add-more-clients",level:4},{value:"6. Open Port",id:"6-open-port",level:3},{value:"7. Start Wireguard",id:"7-start-wireguard",level:3},{value:"8. Stop Wireguard",id:"8-stop-wireguard",level:3},{value:"9. Wireguard Status",id:"9-wireguard-status",level:3},{value:"<strong>CLIENT Configuration</strong>",id:"client-configuration",level:2},{value:"1. Run as <em>root</em>",id:"1-run-as-root-1",level:3},{value:"2. Install Wireguard",id:"2-install-wireguard",level:3},{value:"3. Generate Keys",id:"3-generate-keys",level:3},{value:"4. Create Wireguard Config",id:"4-create-wireguard-config",level:3},{value:"<strong>\u21b3</strong> Create file config:",id:"-create-file-config-1",level:4},{value:"<strong>\u21b3</strong> Add the following content:",id:"-add-the-following-content-1",level:4},{value:"5. Start Wireguard",id:"5-start-wireguard",level:3},{value:"6. Stop Wireguard",id:"6-stop-wireguard",level:3},{value:"7. Wireguard Status",id:"7-wireguard-status",level:3},{value:"RUN wireguard",id:"run-wireguard",level:2}],d={toc:u},c="wrapper";function p(e){let{components:t,...a}=e;return(0,n.kt)(c,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"wireguard"},"WIREGUARD"),(0,n.kt)("h2",{id:"server-configuration"},(0,n.kt)("strong",{parentName:"h2"},"SERVER Configuration")),(0,n.kt)("h3",{id:"1-run-as-root"},"1. Run as ",(0,n.kt)("em",{parentName:"h3"},"root")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo su\n")),(0,n.kt)("h3",{id:"2-enable-port-forwarding"},"2. Enable Port Forwarding"),(0,n.kt)("p",null,"This port needs to be active for the routes to work."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"nano /etc/sysctl.d/70-wireguard-routing.conf\n")),(0,n.kt)("h4",{id:"-uncomment-the-following-line"},(0,n.kt)("strong",{parentName:"h4"},"\u21b3")," Uncomment the following line:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"#net.ipv4.ip_forward=1\n")),(0,n.kt)("h4",{id:"-check-if-the-port-is-active"},(0,n.kt)("strong",{parentName:"h4"},"\u21b3")," Check if the port is active:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo sysctl -p /etc/sysctl.d/70-wireguard-routing.conf\n")),(0,n.kt)("h3",{id:"3-install-wireguard"},"3. Install Wireguard"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get update\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get install wireguard -y\n")),(0,n.kt)("h3",{id:"4-generate-keys"},"4. Generate Keys"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cd /etc/wireguard\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo umask 077; wg genkey | tee private.key | wg pubkey > public.key\n")),(0,n.kt)("h3",{id:"5-create-wireguard-config"},"5. Create Wireguard Config"),(0,n.kt)("h4",{id:"-create-file-config"},(0,n.kt)("strong",{parentName:"h4"},"\u21b3")," Create file config:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano wg0.conf\n")),(0,n.kt)("h4",{id:"-add-the-following-content"},(0,n.kt)("strong",{parentName:"h4"},"\u21b3")," Add the following content:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"[Interface]\n# Server \nAddress = 10.0.0.1/24 \nListenPort = 51820 #default\nPrivateKey = <server private key from private.key>\nPostUp   = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\nPostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE\n\n[Peer]\n# Client\nPublicKey = <client public key (generated on the client side) from Client public.key>\nAllowedIPs = 10.0.0.2/32 (ipv4) or 10.0.0.2/32, ::/0 (optional for ipv6) \n")),(0,n.kt)("h4",{id:"-optionally-can-add-more-clients"},(0,n.kt)("strong",{parentName:"h4"},"\u21b3")," Optionally can add more clients:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"[Peer]\n# Client 2\nPublicKey = <client 2 public key (generated on the client side) from Client public.key>\nAllowedIPs = 10.0.0.3/32 #ip changes\n")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},'Modify the "eth0" network interface according to your machine\'s configuration.')),(0,n.kt)("h3",{id:"6-open-port"},"6. Open Port"),(0,n.kt)("p",null,"It is necessary to release a port for communication between the server and the client."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"\u21b3")," Check if the firewall is active. "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ufw enable\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"\u21b3"),' Add default port "51820" or customize.'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ufw allow 51820/udp\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"\u21b3")," Check port status on firewall"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ufw status\n")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"The ",(0,n.kt)("strong",{parentName:"p"},"ufw")," command can be installed as: "),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get install ufw\n"))),(0,n.kt)("h3",{id:"7-start-wireguard"},"7. Start Wireguard"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"wg-quick up wg0\n")),(0,n.kt)("h3",{id:"8-stop-wireguard"},"8. Stop Wireguard"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"wg-quick down wg0\n")),(0,n.kt)("h3",{id:"9-wireguard-status"},"9. Wireguard Status"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"wg\n")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"client-configuration"},(0,n.kt)("strong",{parentName:"h2"},"CLIENT Configuration")),(0,n.kt)("h3",{id:"1-run-as-root-1"},"1. Run as ",(0,n.kt)("em",{parentName:"h3"},"root")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo su\n")),(0,n.kt)("h3",{id:"2-install-wireguard"},"2. Install Wireguard"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get update\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get install wireguard -y\n")),(0,n.kt)("h3",{id:"3-generate-keys"},"3. Generate Keys"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cd /etc/wireguard\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo umask 077; wg genkey | tee private.key | wg pubkey > public.key\n")),(0,n.kt)("h3",{id:"4-create-wireguard-config"},"4. Create Wireguard Config"),(0,n.kt)("h4",{id:"-create-file-config-1"},(0,n.kt)("strong",{parentName:"h4"},"\u21b3")," Create file config:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano wg0.conf\n")),(0,n.kt)("h4",{id:"-add-the-following-content-1"},(0,n.kt)("strong",{parentName:"h4"},"\u21b3")," Add the following content:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"[Interface]\n# Client\nAddress = 10.0.0.2/24\nPrivateKey = <client private key from private.key>\nDNS = 8.8.8.8 (optional)\n\n[Peer]\n# Server \nPublicKey = <server public key (generated on the server side) from public.key>\nAllowedIPs = 0.0.0.0/0\nEndpoint = 10.0.0.1/24:51820 \nPersistentKeepalive = 25\n")),(0,n.kt)("admonition",{title:"Heads Up",type:"danger"},(0,n.kt)("p",{parentName:"admonition"},"If you want to direct all network traffic through the server ip, add the server's public ip to the endpoint in the wireguard client settings.")),(0,n.kt)("h3",{id:"5-start-wireguard"},"5. Start Wireguard"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"wg-quick up wg0\n")),(0,n.kt)("h3",{id:"6-stop-wireguard"},"6. Stop Wireguard"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"wg-quick down wg0\n")),(0,n.kt)("h3",{id:"7-wireguard-status"},"7. Wireguard Status"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"wg\n")),(0,n.kt)("h2",{id:"run-wireguard"},"RUN wireguard"),(0,n.kt)("p",null,"Start wireguard on the server and client and you're done."),(0,n.kt)("admonition",{title:"Attention",type:"warning"},(0,n.kt)("p",{parentName:"admonition"},"If you use the server to direct all network traffic, start wireguard first on the server and then on the client, since due to the network route, the server is inaccessible. To resume access on the server, turn off wireguard on the client.")))}p.isMDXComponent=!0}}]);